{"ast":null,"code":"var _jsxFileName = \"/Users/codergod999/Desktop/frontend-react/seed-frontend-react/src/components/sign-up-form-ant.jsx\";\nimport { Button, Checkbox, Form, Input } from 'antd';\nimport { useState } from 'react';\nimport RegisterAPI from '../api/register.api';\nimport UserApi from '../api/user.api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpForm = props => {\n  const onFinish = async values => {\n    const postRequest = {\n      email: values.Email,\n      password: values.password\n    };\n    const data = await RegisterAPI.register(postRequest);\n  };\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      layout: \"vertical\",\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }, {\n          min: 5,\n          message: 'min 5 chars pls'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter your username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        name: \"Email\",\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }, {\n          type: 'email',\n          message: 'Invalid Email format'\n        }, {\n          min: 5,\n          message: 'Min 5 chars required'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          min: 5,\n          message: 'min 5 chars pls'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          span: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: 12,\n            height: 40,\n            width: \"100%\",\n            backgroundColor: \"#212121\"\n          },\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["Button","Checkbox","Form","Input","useState","RegisterAPI","UserApi","jsxDEV","_jsxDEV","SignUpForm","props","onFinish","values","postRequest","email","Email","password","data","register","onFinishFailed","errorInfo","console","log","style","marginTop","children","name","initialValues","remember","layout","autoComplete","Item","label","rules","required","message","min","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","Password","wrapperCol","span","height","width","backgroundColor","htmlType","_c","$RefreshReg$"],"sources":["/Users/codergod999/Desktop/frontend-react/seed-frontend-react/src/components/sign-up-form-ant.jsx"],"sourcesContent":["import { Button, Checkbox, Form, Input } from 'antd';\nimport { useState } from 'react';\nimport RegisterAPI from '../api/register.api';\nimport UserApi from '../api/user.api';\n\nconst SignUpForm = (props) => {\n\n\n\n    const onFinish = async (values) => {\n\n        const postRequest = {\n            email: values.Email,\n            password: values.password\n        }\n        const data = await RegisterAPI.register(postRequest)\n\n    };\n\n\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <div style={{ marginTop: 20 }}>\n\n            <Form\n                name=\"basic\"\n\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n                layout=\"vertical\"\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n                <Form.Item\n                    label=\"Username\"\n                    name=\"username\"\n                    rules={[\n                        { required: true, message: 'Please input your username!' },\n                        { min: 5, message: 'min 5 chars pls' },\n                    ]}\n                >\n                    <Input placeholder='Enter your username' />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Email\"\n                    name=\"Email\"\n                    rules={[\n                        { required: true, message: 'Please input your username!' },\n                        { type: 'email', message: 'Invalid Email format' },\n                        { min: 5, message: 'Min 5 chars required' },\n                    ]}\n                >\n                    <Input placeholder='Enter your email' />\n                </Form.Item>\n\n\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[\n                        { required: true, message: 'Please input your password!' },\n                        { min: 5, message: 'min 5 chars pls' },\n                    ]}\n                >\n                    <Input.Password placeholder='Enter your password' />\n                </Form.Item>\n\n                <Form.Item\n                    wrapperCol={{\n                        span: 24,\n                    }}\n                >\n                    <Button style={{marginTop: 12, height: 40, width: \"100%\", backgroundColor: \"#212121\" }} type=\"primary\" htmlType=\"submit\">\n                        Sign Up\n                    </Button>\n\n                </Form.Item>\n            </Form>\n\n\n        </div >)\n};\nexport default SignUpForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}